{"ast":null,"code":"var _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar url = \"http://10.0.0.12/api/suggestions/sick.php\";\n\nfunction SuggestionContainer() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  React.useEffect(function () {\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json.datos);\n    }).catch(function (error) {\n      return alert(error);\n    }).finally(function () {\n      return setIsLoading(false);\n    });\n  }, []);\n  var datosS = data.map(function (dat) {\n    return dat.sick;\n  });\n}","map":{"version":3,"sources":["C:/Users/Telecom/Documents/ProyectosR/AIDA/src/services/users/index.js"],"names":["url","SuggestionContainer","useState","isLoading","setIsLoading","data","setData","React","useEffect","fetch","then","response","json","datos","catch","error","alert","finally","datosS","map","dat","sick"],"mappings":";;AAAA,IAAMA,GAAG,GAAG,2CAAZ;;AACA,SAASC,mBAAT,GAA+B;AAC3B,kBAAkCC,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAwBF,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOG,IAAP;AAAA,MAAaC,OAAb;;AAEAC,EAAAA,KAAK,CAACC,SAAN,CAAgB,YAAM;AAClBC,IAAAA,KAAK,CAACT,GAAD,CAAL,CACKU,IADL,CACU,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADV,EAEKF,IAFL,CAEU,UAACE,IAAD;AAAA,aAAUN,OAAO,CAACM,IAAI,CAACC,KAAN,CAAjB;AAAA,KAFV,EAGKC,KAHL,CAGW,UAACC,KAAD;AAAA,aAAWC,KAAK,CAACD,KAAD,CAAhB;AAAA,KAHX,EAIKE,OAJL,CAIa;AAAA,aAAMb,YAAY,CAAC,KAAD,CAAlB;AAAA,KAJb;AAKH,GAND,EAMG,EANH;AAQA,MAAMc,MAAM,GAAGb,IAAI,CAACc,GAAL,CAAS,UAAUC,GAAV,EAAe;AACnC,WAAOA,GAAG,CAACC,IAAX;AACH,GAFc,CAAf;AAIH","sourcesContent":["const url = \"http://10.0.0.12/api/suggestions/sick.php\";\r\nfunction SuggestionContainer() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [data, setData] = useState([]);\r\n\r\n    React.useEffect(() => {\r\n        fetch(url)\r\n            .then((response) => response.json())\r\n            .then((json) => setData(json.datos))\r\n            .catch((error) => alert(error))\r\n            .finally(() => setIsLoading(false));\r\n    }, []);\r\n\r\n    const datosS = data.map(function (dat) {\r\n        return dat.sick;\r\n    });\r\n    \r\n}"]},"metadata":{},"sourceType":"script"}