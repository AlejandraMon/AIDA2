{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Telecom\\\\Documents\\\\ProyectosR\\\\AIDA\\\\src\\\\screens\\\\dhasboard\\\\componentes\\\\userD.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { GetUserId } from \"../../../services\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport stylescards from \"../../../styles/cards\";\n\nvar UserData = function (_React$Component) {\n  _inherits(UserData, _React$Component);\n\n  var _super = _createSuper(UserData);\n\n  function UserData(props) {\n    var _this;\n\n    _classCallCheck(this, UserData);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      datos: [],\n      isFetch: true\n    };\n    return _this;\n  }\n\n  _createClass(UserData, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var responseJson;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(GetUserId());\n\n            case 2:\n              responseJson = _context.sent;\n              this.setState({\n                datos: responseJson,\n                isFetch: false\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isFetch = _this$state.isFetch,\n          datos = _this$state.datos;\n\n      if (isFetch) {\n        return React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }\n        }, \"Buscando...\");\n      }\n\n      return React.createElement(View, {\n        style: stylescards.containerUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, React.createElement(FontAwesome, {\n        name: \"user\",\n        color: \"#000000\",\n        size: 49,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: stylescards.textUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, \"Hola \", datos.name, \"-\", datos.last_name));\n    }\n  }]);\n\n  return UserData;\n}(React.Component);\n\nexport default UserData;","map":{"version":3,"sources":["C:/Users/Telecom/Documents/ProyectosR/AIDA/src/screens/dhasboard/componentes/userD.js"],"names":["React","GetUserId","FontAwesome","stylescards","UserData","props","state","datos","isFetch","responseJson","setState","containerUser","textUser","name","last_name","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,SAAT;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,OAAO,EAAC;AAFD,KAAX;AAHc;AAOjB;;;;WAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC+BP,SAAS,EADxC;;AAAA;AACUQ,cAAAA,YADV;AAEI,mBAAKC,QAAL,CAAc;AAACH,gBAAAA,KAAK,EAAEE,YAAR;AAAsBD,gBAAAA,OAAO,EAAC;AAA9B,eAAd;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAIJ,kBAAQ;AACJ,wBAAyB,KAAKF,KAA9B;AAAA,UAAOE,OAAP,eAAOA,OAAP;AAAA,UAAgBD,KAAhB,eAAgBA,KAAhB;;AACA,UAAGC,OAAH,EAAW;AACP,eACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ;AAGH;;AACD,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,WAAW,CAACQ,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AACgB,QAAA,IAAI,EAAC,MADrB;AAEgB,QAAA,KAAK,EAAC,SAFtB;AAGgB,QAAA,IAAI,EAAE,EAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,WAAW,CAACS,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAyCL,KAAK,CAACM,IAA/C,OAAsDN,KAAK,CAACO,SAA5D,CALJ,CADJ;AASH;;;;EA9BsBd,KAAK,CAACe,S;;AAkC7B,eAAeX,QAAf","sourcesContent":["import React from \"react\";\r\nimport {Text,View} from 'react-native';\r\nimport { GetUserId } from \"../../../services\";\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\nimport stylescards from \"../../../styles/cards\";\r\n\r\nclass UserData extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            datos: [],\r\n            isFetch:true,\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const responseJson = await GetUserId()\r\n        this.setState({datos: responseJson, isFetch:false})\r\n}\r\nrender(){\r\n    const {isFetch, datos} = this.state\r\n    if(isFetch){\r\n        return(\r\n            <Text>Buscando...</Text>\r\n        )\r\n    }\r\n    return(\r\n        <View style={stylescards.containerUser}>\r\n            <FontAwesome\r\n                            name=\"user\"\r\n                            color=\"#000000\"\r\n                            size={49}></FontAwesome>\r\n            <Text style={stylescards.textUser}>Hola {datos.name}-{datos.last_name}</Text>\r\n        </View>\r\n    )\r\n}\r\n}\r\n\r\n\r\nexport default UserData;"]},"metadata":{},"sourceType":"module"}