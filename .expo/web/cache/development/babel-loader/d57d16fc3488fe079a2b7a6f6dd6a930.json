{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Telecom\\\\Documents\\\\ProyectosR\\\\AIDA\\\\src\\\\screens\\\\profile-screen\\\\components\\\\profile.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { GetUserId } from \"../../../services\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport profile from \"../../../styles/profile\";\n\nvar Profile = function (_React$Component) {\n  _inherits(Profile, _React$Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      datos: [],\n      isFetch: true\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var responseJson;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(GetUserId());\n\n            case 2:\n              responseJson = _context.sent;\n              this.setState({\n                datos: responseJson,\n                isFetch: false\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isFetch = _this$state.isFetch,\n          datos = _this$state.datos;\n\n      if (isFetch) {\n        return React.createElement(Text, {\n          style: profile.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }\n        }, \"Buscando...\");\n      }\n\n      return React.createElement(View, {\n        style: profile.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"./../../../../assets/avatar2.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: profile.containerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: profile.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, \" \", datos.name, \" \", datos.last_name)), React.createElement(View, {\n        style: profile.containerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, React.createElement(FontAwesome, {\n        name: \"user\",\n        color: \"#05375a\",\n        size: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: profile.textItal2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, \" \", datos.email)), React.createElement(View, {\n        style: profile.containerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, React.createElement(FontAwesome, {\n        name: \"phone\",\n        color: \"#05375a\",\n        size: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: profile.text2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, \"Tel\\xE9fono: \", datos.phone)), React.createElement(View, {\n        style: profile.containerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, React.createElement(FontAwesome, {\n        name: \"calendar\",\n        color: \"#05375a\",\n        size: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: profile.text2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, \"Fecha de nacimiento: \", datos.birth)), React.createElement(View, {\n        style: profile.containerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, React.createElement(FontAwesome, {\n        name: \"map-marker\",\n        color: \"#05375a\",\n        size: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: profile.text2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, \"Direcci\\xF3n: \", datos.adress)), React.createElement(View, {\n        style: profile.containerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, React.createElement(FontAwesome, {\n        name: \"briefcase\",\n        color: \"#05375a\",\n        size: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: profile.text2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, \"Ocupaci\\xF3n: \", datos.employment)));\n    }\n  }]);\n\n  return Profile;\n}(React.Component);\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Telecom/Documents/ProyectosR/AIDA/src/screens/profile-screen/components/profile.js"],"names":["React","GetUserId","FontAwesome","profile","Profile","props","state","datos","isFetch","responseJson","setState","title","container","require","containerText","text","name","last_name","textItal2","email","text2","phone","birth","adress","employment","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Text, View, Image,TouchableOpacity } from 'react-native';\r\nimport { GetUserId } from \"../../../services\";\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\nimport profile from \"../../../styles/profile\";\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            datos: [],\r\n            isFetch: true,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const responseJson = await GetUserId()\r\n        this.setState({ datos: responseJson, isFetch: false })\r\n    }\r\n    render() {\r\n        const { isFetch, datos } = this.state\r\n        if (isFetch) {\r\n            return (\r\n                <Text style={profile.title}>Buscando...</Text>\r\n            )\r\n        }\r\n        return (\r\n            <View style={profile.container}>\r\n                <View>\r\n                    <Image\r\n                        source={require('./../../../../assets/avatar2.png')}\r\n                    />\r\n                </View>\r\n                <View style={profile.containerText}>\r\n\r\n                    <Text style={profile.text}> {datos.name} {datos.last_name}</Text>\r\n                </View>\r\n\r\n                <View style={profile.containerText}>\r\n                    <FontAwesome\r\n                        name=\"user\"\r\n                        color=\"#05375a\"\r\n                        size={25}></FontAwesome>\r\n                    <Text style={profile.textItal2}> {datos.email}</Text>\r\n                </View>\r\n\r\n                <View style={profile.containerText}>\r\n                    <FontAwesome\r\n                        name=\"phone\"\r\n                        color=\"#05375a\"\r\n                        size={25}></FontAwesome>\r\n                    <Text style={profile.text2}>Teléfono: {datos.phone}</Text>\r\n                </View>\r\n\r\n                <View style={profile.containerText}>\r\n                    <FontAwesome\r\n                        name=\"calendar\"\r\n                        color=\"#05375a\"\r\n                        size={25}></FontAwesome>\r\n                    <Text style={profile.text2}>Fecha de nacimiento: {datos.birth}</Text>\r\n                </View>\r\n\r\n                <View style={profile.containerText}>\r\n                    <FontAwesome\r\n                        name=\"map-marker\"\r\n                        color=\"#05375a\"\r\n                        size={25}></FontAwesome>\r\n                    <Text style={profile.text2}>Dirección: {datos.adress}</Text>\r\n                </View>\r\n\r\n                <View style={profile.containerText}>\r\n                    <FontAwesome\r\n                        name=\"briefcase\"\r\n                        color=\"#05375a\"\r\n                        size={25}></FontAwesome>\r\n                    <Text style={profile.text2}>Ocupación: {datos.employment}</Text>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}