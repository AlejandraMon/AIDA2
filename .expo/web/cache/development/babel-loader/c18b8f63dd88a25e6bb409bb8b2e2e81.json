{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Telecom\\\\Documents\\\\ProyectosR\\\\AIDA\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Dashboard, DetectionScreen, ProfileScreen, ResultScreen, WearableScreen, SuggestionsScreen, EditProfileScreen } from \"./src/screens\";\nimport Router from \"./src/routes\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AuthContext } from \"./src/helpers/context\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { DrawerContent } from \"./src/components/menu\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  var _this = this;\n\n  var initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null\n  };\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: null,\n          userToken: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(foundUser) {\n        var userToken, userName;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userToken = String(foundUser[0].userToken);\n                userName = foundUser[0].username;\n                _context.prev = 2;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', userToken));\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 10:\n                dispatch({\n                  type: 'LOGIN',\n                  id: userName,\n                  token: userToken\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 7]], Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userToken'));\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n                dispatch({\n                  type: 'LOGOUT'\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signUp: function signUp() {},\n      toggleTheme: function toggleTheme() {\n        setIsDarkTheme(function (isDarkTheme) {\n          return !isDarkTheme;\n        });\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    setTimeout(function _callee() {\n      var userToken;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userToken = null;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n            case 4:\n              userToken = _context3.sent;\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 10:\n              console.log('user token: ', userToken);\n              dispatch({\n                type: 'RETRIEVE_TOKEN',\n                token: userToken\n              });\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 7]], Promise);\n    }, 1000);\n  }, []);\n\n  if (loginState.isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, loginState.userToken !== null ? React.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerContent, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 51\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Inicio\",\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Detecci\\xF3n de ECV\",\n    component: DetectionScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Perfil\",\n    component: ProfileScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Resultados\",\n    component: ResultScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Dispositivos\",\n    component: WearableScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Sugerencias\",\n    component: SuggestionsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Editar perfil\",\n    component: EditProfileScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  })) : React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Telecom/Documents/ProyectosR/AIDA/App.js"],"names":["React","Dashboard","DetectionScreen","ProfileScreen","ResultScreen","WearableScreen","SuggestionsScreen","EditProfileScreen","Router","AuthContext","NavigationContainer","DrawerContent","createDrawerNavigator","Drawer","App","initialLoginState","isLoading","userName","userToken","loginReducer","prevState","action","type","token","id","useReducer","loginState","dispatch","authContext","useMemo","signIn","foundUser","String","username","AsyncStorage","setItem","console","log","signOut","removeItem","signUp","toggleTheme","setIsDarkTheme","isDarkTheme","useEffect","setTimeout","getItem","flex","justifyContent","alignItems","props"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { Dashboard, DetectionScreen, ProfileScreen, ResultScreen, WearableScreen, SuggestionsScreen , EditProfileScreen} from \"./src/screens\";\nimport Router from './src/routes';\nimport {View, ActivityIndicator} from 'react-native';\nimport { AuthContext } from \"./src/helpers/context\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport {DrawerContent} from './src/components/menu';\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\n\n\nconst Drawer = createDrawerNavigator();\n\nexport default function App(){\n  const initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null,\n  };\n  const loginReducer = (prevState, action) => {\n    switch( action.type ) {\n      case 'RETRIEVE_TOKEN': \n        return {\n          ...prevState,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGIN': \n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGOUT': \n        return {\n          ...prevState,\n          userName: null,\n          userToken: null,\n          isLoading: false,\n        };\n      case 'REGISTER': \n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n    }\n  };\n  const [loginState, dispatch] = React.useReducer(loginReducer, initialLoginState);\n  const authContext = React.useMemo(() => ({\n    signIn: async(foundUser) => {\n      // setUserToken('fgkj');\n      // setIsLoading(false);\n      const userToken = String(foundUser[0].userToken);\n      const userName = foundUser[0].username;\n      \n      try {\n        await AsyncStorage.setItem('userToken', userToken);\n      } catch(e) {\n        console.log(e);\n      }\n      // console.log('user token: ', userToken);\n      dispatch({ type: 'LOGIN', id: userName, token: userToken });\n    },\n    signOut: async() => {\n      // setUserToken(null);\n      // setIsLoading(false);\n      try {\n        await AsyncStorage.removeItem('userToken');\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({ type: 'LOGOUT' });\n    },\n    signUp: () => {\n      // setUserToken('fgkj');\n      // setIsLoading(false);\n    },\n    toggleTheme: () => {\n      setIsDarkTheme( isDarkTheme => !isDarkTheme );\n    }\n  }), []);\n\n  React.useEffect(() => {\n    setTimeout(async() => {\n      // setIsLoading(false);\n      let userToken;\n      userToken = null;\n      try {\n        userToken = await AsyncStorage.getItem('userToken');\n      } catch(e) {\n        console.log(e);\n      }\n       console.log('user token: ', userToken);\n      dispatch({ type: 'RETRIEVE_TOKEN', token: userToken });\n    }, 1000);\n  }, []);\n\n  if( loginState.isLoading ) {\n    return(\n      <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\n        <ActivityIndicator size=\"large\"/>\n      </View>\n    );\n  }\n  return(\n    <AuthContext.Provider value={authContext}>\n    <NavigationContainer>\n      { loginState.userToken !== null ? (\n        <Drawer.Navigator drawerContent={props => <DrawerContent {...props} />}>\n          <Drawer.Screen name=\"Inicio\" component={Dashboard} />\n          <Drawer.Screen name=\"Detección de ECV\" component={DetectionScreen} />\n          <Drawer.Screen name=\"Perfil\" component={ProfileScreen} />\n          <Drawer.Screen name=\"Resultados\" component={ResultScreen} />\n          <Drawer.Screen name=\"Dispositivos\" component={WearableScreen} />\n          <Drawer.Screen name=\"Sugerencias\" component={SuggestionsScreen} />\n          <Drawer.Screen name=\"Editar perfil\" component={EditProfileScreen} />\n        </Drawer.Navigator>\n      )\n    :\n      <Router></Router>\n    }\n    </NavigationContainer>\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}