{"ast":null,"code":"var _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar Meta = function Meta() {\n  \"use strict\";\n\n  var _this = this;\n\n  _classCallCheck(this, Meta);\n\n  this.obj = null;\n\n  this.test = function () {\n    return fetch('http://10.0.0.12/api/usuario/consulta.php').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var datos = data.datos;\n      var js = JSON.stringify(datos);\n      _this.obj = js;\n    }).catch(console.log);\n  };\n};\n\nvar mt = new Meta();\nvar User = mt.test().then(function () {\n  var u = mt.obj;\n  console.log(u);\n});\nconsole.log(User);","map":{"version":3,"sources":["C:/Users/Telecom/Documents/ProyectosR/AIDA/src/services/users/index.js"],"names":["Meta","obj","test","fetch","then","response","json","data","datos","js","JSON","stringify","catch","console","log","mt","User","u"],"mappings":";;IAAMA,I;;;;;;;OACFC,G,GAAM,I;;OACNC,I,GAAO,YAAM;AACT,WAAOC,KAAK,CAAC,2CAAD,CAAL,CACFC,IADE,CACG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADX,EAEFF,IAFE,CAEG,UAAAG,IAAI,EAAI;AACV,UAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AACA,UAAIC,EAAE,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAT;AACA,MAAA,KAAI,CAACP,GAAL,GAAWQ,EAAX;AACH,KANE,EAOFG,KAPE,CAOIC,OAAO,CAACC,GAPZ,CAAP;AAQH,G;;;AAGL,IAAIC,EAAE,GAAG,IAAIf,IAAJ,EAAT;AAEA,IAAIgB,IAAI,GAAGD,EAAE,CAACb,IAAH,GAAUE,IAAV,CAAe,YAAM;AAC5B,MAAIa,CAAC,GAAGF,EAAE,CAACd,GAAX;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACH,CAHU,CAAX;AAIAJ,OAAO,CAACC,GAAR,CAAaE,IAAb","sourcesContent":["class Meta {\r\n    obj = null;\r\n    test = () => {\r\n        return fetch('http://10.0.0.12/api/usuario/consulta.php')\r\n            .then(response => response.json())  // <- ejecuto la función que devuelve una Promesa\r\n            .then(data => {\r\n                let datos = data.datos\r\n                let js = JSON.stringify(datos)\r\n                this.obj = js;  // asigno el objeto a la propiedad obj de la Clase\r\n            })\r\n            .catch(console.log)  // un poquito de programación funcional :)            \r\n    }\r\n}\r\n\r\nlet mt = new Meta();\r\n\r\nlet User = mt.test().then(() => {\r\n    let u = mt.obj;\r\n    console.log(u); // <- ahora si obj contiene lo que me interesa\r\n});\r\nconsole.log (User)\r\n//export default Users = User;"]},"metadata":{},"sourceType":"script"}